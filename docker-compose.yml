services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: aiffinity_db
      MYSQL_USER: user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-MyPassword}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-MyRootPassword}
      TZ: Europe/Madrid
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD} -h localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [aiffinity_network]

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    networks: [aiffinity_network]

  # backend:
  #   build: ./backend
  #   container_name: aiffinity_api
  #   environment:
  #     DB_NAME: aiffinity_db
  #     DB_USER: user
  #     DB_PASSWORD: ${MYSQL_PASSWORD:-MyPassword}
  #     DB_HOST: db
  #     DB_PORT: 3306
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     JWT_SECRET: ${JWT_SECRET:-supersecret}
  #     OPENAI_API_KEY: ${OPENAI_API_KEY:?set_in_.env}
  #     PORT: 2159
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started
  #   ports:
  #     - "2159:2159"
  #   networks: [aiffinity_network]
  #   profiles: ["api"] # docker compose --profile api up

  # frontend:
  #   build: ./frontend
  #   container_name: aiffinity_web
  #   environment:
  #     NEXT_PUBLIC_BACKEND_URL: http://localhost:2159/graphql
  #   ports:
  #     - "4020:3000"
  #   depends_on:
  #     - backend
  #   networks: [aiffinity_network]
  #   profiles: ["web"] # docker compose --profile web up

networks:
  aiffinity_network:
    driver: bridge

volumes:
  db_data:
